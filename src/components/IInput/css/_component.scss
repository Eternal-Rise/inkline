////
/// The background of the input component
/// @name input--background
/// @type color
////
    
////
/// The background of the input component when disabled
/// @name input--background--disabled
/// @type color
////
    
////
/// The border color of the input component
/// @name input--border-color
/// @type color
////
    
////
/// The border color of the input component when hovered
/// @name input--border-color--hover
/// @type color
////
    
////
/// The border color of the input component when focused
/// @name input--border-color--focus
/// @type color
////
    
////
/// The border style of the input component
/// @name input--border-style
////
    
////
/// The border top width of the input component
/// @name input--border-top-width
////
    
////
/// The border right width of the input component
/// @name input--border-right-width
////
    
////
/// The border bottom width of the input component
/// @name input--border-bottom-width
////
    
////
/// The border left width of the input component
/// @name input--border-left-width
////
    
////
/// The border width of the input component
/// @name input--border-width
////
    
////
/// The border top left radius of the input component
/// @name input--border-top-left-radius
/// @type size
////
    
////
/// The border top right radius of the input component
/// @name input--border-top-right-radius
/// @type size
////
    
////
/// The border bottom right radius of the input component
/// @name input--border-bottom-right-radius
/// @type size
////
    
////
/// The border bottom left radius of the input component
/// @name input--border-bottom-left-radius
/// @type size
////
    
////
/// The border radius of the input component
/// @name input--border-radius
////
    
////
/// The box shadow horizontal offset of the input component
/// @name input--box-shadow-offset-x
////
    
////
/// The box shadow vertical offset of the input component
/// @name input--box-shadow-offset-y
////
    
////
/// The box shadow blur radius of the input component
/// @name input--box-shadow-blur-radius
////
    
////
/// The box shadow spread radius of the input component
/// @name input--box-shadow-spread-radius
////
    
////
/// The box shadow spread radius of the input component
/// @name input--box-shadow-color
////
    
////
/// The box shadow of the input component
/// @name input--box-shadow
////
    
////
/// The color of the input component
/// @name input--color
/// @type color
////
    
////
/// The color of the input component when disabled
/// @name input--color--disabled
/// @type color
////
    
////
/// The font size of the input component
/// @name input--font-size
/// @type size
////
    
////
/// The line height of the input component
/// @name input--line-height
////
    
////
/// The padding top of the input component
/// @name input--padding-top
/// @type size
////
    
////
/// The padding right of the input component
/// @name input--padding-right
/// @type size
////
    
////
/// The padding bottom of the input component
/// @name input--padding-bottom
/// @type size
////
    
////
/// The padding left of the input component
/// @name input--padding-left
/// @type size
////
    
////
/// The padding of the input component
/// @name input--padding
////
    
////
/// The background of the input component clear button
/// @name input--clear--background
/// @type color
////
    
////
/// The background of the input component clear button
/// @name input--clear--background--hover
/// @type color
////
    
////
/// The background of the input component clear button
/// @name input--clear--background--active
/// @type color
////
    
////
/// The color of the input component clear button
/// @name input--clear--color
/// @type color
////
    
////
/// The size of the input component clear button
/// @name input--clear--size
////
    
////
/// The color of the input component placeholder
/// @name input--placeholder--color
/// @type color
////
    
////
/// The border width of the input component prefix
/// @name input--prefix--border-width
////
    
////
/// The border width of the input component suffix
/// @name input--suffix--border-width
////
    
////
/// The border style of the input component prefix and suffix
/// @name input--prefix-suffix--border-style
////
    
////
/// The color of the input component prefix and suffix
/// @name input--prefix-suffix--color
/// @type color
////
    
////
/// The padding right of the input component prefix and suffix
/// @name input--prefix-suffix--padding-right
////
    
////
/// The padding left of the input component prefix and suffix
/// @name input--prefix-suffix--padding-left
////
    
////
/// The background of the input component prepend and append
/// @name input--prepend-append--background
/// @type color
////
    

@import '../../css/variables';
@import '../../css/mixins';
@import '../../css/icons';
@import 'css/variables';
@import 'css/sizes';
@import 'css/colors';

.input-wrapper {
    display: block;
    vertical-align: middle;
    position: relative;

    .input-prepend,
    .input-append {
        display: flex;
        flex-flow: row nowrap;
        align-items: stretch;
        padding: 0;
        line-height: var(--input-line-height);
        transition-property: var(--input--transition-property, (background-color));
        transition-duration: var(--input--transition-duration, var(--transition-duration));
        transition-timing-function: var(--input--transition-timing-function, var(--transition-timing-function));
        background-color: var(----prepend-append--background);
        font-size: var(--input--font-size, var(--font-size));

        > * {
            display: flex;
            flex: auto 1 0;
            align-self: stretch;
            align-items: center;
            border-radius: 0;
            padding-left: var(----prefix-suffix--padding-left);
            padding-right: var(----prefix-suffix--padding-right);
        }

        > [class$="-wrapper"] {
            padding-left: 0;
            padding-right: 0;
        }
    }

    .input-prepend,
    .input-prepend > *:first-child {
        border-top-left-radius: var(--input--border-top-left-radius, var(--border-top-left-radius));
        border-bottom-left-radius: var(--input--border-bottom-left-radius, var(--border-bottom-left-radius));
    }

    .input-append,
    .input-append > *:last-child {
        border-top-right-radius: var(--input--border-top-right-radius, var(--border-top-right-radius));
        border-bottom-right-radius: var(--input--border-bottom-right-radius, var(--border-bottom-right-radius));
    }

    .input {
        position: relative;
        display: flex;
        flex: 1 0 auto;
        align-items: center;
        flex-direction: row;
        background-clip: padding-box;
        border-width: var(
                --input--border-width,
                (
                        var(--input--border-top-width, var(--border-top-width))
                        var(--input--border-right-width, var(--border-right-width))
                        var(--input--border-bottom-width, var(--border-bottom-width))
                        var(--input--border-left-width, var(--border-left-width))
                )
        );
        border-style: var(
                --input--border-style,
                (
                        var(--input--border-top-style, var(--border-top-style))
                        var(--input--border-right-style, var(--border-right-style))
                        var(--input--border-bottom-style, var(--border-bottom-style))
                        var(--input--border-left-style, var(--border-left-style))
                )
        );
        border-color: var(
                --input--border-color,
                (
                        var(--input--border-top-color, var(--border-top-color))
                        var(--input--border-right-color, var(--border-right-color))
                        var(--input--border-bottom-color, var(--border-bottom-color))
                        var(--input--border-left-color, var(--border-left-color))
                )
        );
        border-radius: var(
                --input--border-radius,
                (
                        var(--input--border-top-left-radius, var(--border-top-left-radius))
                        var(--input--border-top-right-radius, var(--border-top-right-radius))
                        var(--input--border-bottom-right-radius, var(--border-bottom-right-radius))
                        var(--input--border-bottom-left-radius, var(--border-bottom-left-radius))
                )
        );
        box-shadow: var(
                --input--box-shadow,
                (
                        var(--input--box-shadow-x-offset, var(--box-shadow-offset-x))
                        var(--input--box-shadow-y-offset, var(--box-shadow-offset-y))
                        var(--input--box-shadow-blur-radius, var(--box-shadow-blur-radius))
                        var(--input--box-shadow-spread-radius, var(--box-shadow-spread-radius))
                        var(--input--box-shadow-color, var(--box-shadow-color))
                )
        );
        transition-property: var(--input--transition-property, (background-color, color, border-color, box-shadow));
        transition-duration: var(--input--transition-duration, var(--transition-duration));
        transition-timing-function: var(--input--transition-timing-function, var(--transition-timing-function));
        color: var(--input--color);
        background-color: var(--input--background);
        font-size: var(--input--font-size, var(--font-size));

        &:hover {
            --input--border-color: var(----border-color--hover);
        }

        // Customize the `:focus` state to imitate native WebKit styles.
        &:focus-within {
            outline: 0;
            box-shadow: var(
                        --input--box-shadow,
                        (
                                    var(--input--box-shadow-x-offset, var(--box-shadow-offset-x))
                                    var(--input--box-shadow-y-offset, var(--box-shadow-offset-y))
                                    var(--input--box-shadow-blur-radius, var(--box-shadow-blur-radius))
                                    var(--input--box-shadow-spread-radius, var(--box-shadow-spread-radius))
                                    var(--input--box-shadow-color, var(--box-shadow-color))
                        )
            );
            --input--border-color: var(----border-color--focus);
        }

        > input,
        > select,
        > textarea {
            position: relative;
            flex: 1 0 auto;
            width: 1%;
            background: transparent;
            border: 0;
            margin: 0;
            outline: 0;
            line-height: var(--input--line-height, var(--line-height));
            color: var(--input--color);
            padding: var(
                        --input--padding,
                        (
                                    var(--input--padding-top, var(--padding-top))
                                    var(--input--padding-right, var(--padding-right))
                                    var(--input--padding-bottom, var(--padding-bottom))
                                    var(--input--padding-left, var(--padding-left))
                        )
            );

            // Remove style for the caret on `<select>`s in IE10+.
            &::-ms-expand {
                background-color: transparent;
                border: 0;
            }

            // Placeholder
            // Override Firefox's unusual default opacity see https://github.com/twbs/bootstrap/pull/11526.
            &::placeholder {
                opacity: 1;
                color: var(----placeholder--color);
            }

            // Disabled and read-only inputs
            //
            // HTML5 says that controls under a fieldset > legend:first-child won't be
            // disabled if the fieldset is disabled. Due to implementation difficulty, we
            // don't honor that edge case we style them as disabled anyway.
            &:disabled,
            &[readonly] {
                opacity: 1; // iOS fix for unreadable disabled content
                cursor: default;
            }

            /**
             * Select
             */
            &[readonly]:focus {
                outline: 0;
            }
        }

        .input-prefix,
        .input-suffix {
            display: inline-flex;
            align-items: center;
            z-index: 1;
            font-style: normal;
            transition-property: var(--input--transition-property, (border-color));
            transition-duration: var(--input--transition-duration, var(--transition-duration));
            transition-timing-function: var(--input--transition-timing-function, var(--transition-timing-function));
            border-color: var(
                        --input--border-color,
                        (
                                    var(--input--border-top-color, var(--border-top-color))
                                    var(--input--border-right-color, var(--border-right-color))
                                    var(--input--border-bottom-color, var(--border-bottom-color))
                                    var(--input--border-left-color, var(--border-left-color))
                        )
            );
            color: var(----prefix-suffix--color);
            padding-right: var(----prefix-suffix--padding-right);
            padding-left: var(----prefix-suffix--padding-left);

            > button {
                background: transparent;
                border: 0;
                color: inherit;
            }
        }

        .input-prefix {
            border-right-width: var(----prefix--border-width);
            border-right-style: var(----prefix-suffix--border-style);
        }

        .input-suffix {
            border-left-width: var(----suffix--border-width);
            border-left-style: var(----prefix-suffix--border-style);
        }

        .input-clear {
            transition-property: var(--input--transition-property, (background-color));
            transition-duration: var(--input--transition-duration, var(--transition-duration));
            transition-timing-function: var(--input--transition-timing-function, var(--transition-timing-function));
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            width: var(----clear--size);
            height: var(----clear--size);
            border-radius: 100%;
            background-color: var(----clear--background);
            color: var(----clear--color);

            &:hover,
            &:focus {
                ----clear--color: var(----clear--color--hover);
                ----clear--background: var(----clear--background--hover);
            }

            &:active {
                ----clear--background: var(----clear--background--active);
            }

            &::before {
                background-color: var(----clear--color);
                content: '';
                mask-image: url($ink-times);
                mask-position: center center;
                mask-repeat: no-repeat;
                mask-size: 8px 8px;
                height: 8px;
                width: 8px;
            }
        }
    }

    &.-prepended,
    &.-appended {
        display: flex;
        flex-wrap: nowrap;

        > .input {
            flex-shrink: 1;
        }
    }

    &.-prepended {
        > .input {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    }

    &.-appended {
        > .input {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
    }

    &.-error {
        > .input {
            --input--border-color: var(--color-danger);
        }
    }

    &.-disabled,
    &.-readonly {
        > .input {
            --input--color: var(--input--disabled--color);
            --input--background: var(--input--disabled--background);

            &:hover {
                border-color: var(
                                --input--border-color,
                                (
                                                var(--input--border-top-color, var(--border-top-color))
                                                var(--input--border-right-color, var(--border-right-color))
                                                var(--input--border-bottom-color, var(--border-bottom-color))
                                                var(--input--border-left-color, var(--border-left-color))
                                )
                );
            }

            > input,
            > select,
            > textarea {
                &:disabled,
                &[readonly] {
                    --input--color: var(--input--disabled--color);
                }
            }
        }
    }

    &.-readonly {
        > .input {
            &:focus-within {
                outline: 0;
                --input--border-color: var(----border-color--focus);
            }
        }
    }
}
