@use 'sass:map';

@mixin popup($z-index: 2000) {
    position: fixed;
    z-index: $z-index;
    word-wrap: break-word;

    &:focus:hover {
        outline-width: 0;
    }

    &[data-popper-placement^='top'] {
        transform-origin: center bottom;
    }

    &[data-popper-placement^='bottom'] {
        transform-origin: center top;
    }

    &[data-popper-placement^='right'] {
        transform-origin: left center;
    }

    &[data-popper-placement^='left'] {
        transform-origin: right center;
    }
}

@mixin popup-arrow() {
    > [data-popper-arrow],
    > [data-popper-arrow]::after {
        display: block;
        width: 0;
        height: 0;
        border-color: transparent;
        border-style: solid;
        position: absolute;
    }

    > [data-popper-arrow]::after {
        content: '';
    }

    &[data-popper-placement^='top'] > [data-popper-arrow] {
        border-bottom-width: 0;

        &::after {
            border-bottom-width: 0;
        }
    }

    &[data-popper-placement^='bottom'] > [data-popper-arrow] {
        border-top-width: 0;

        &::after {
            border-top-width: 0;
        }
    }

    &[data-popper-placement^='right'] > [data-popper-arrow] {
        border-left-width: 0;

        &::after {
            border-left-width: 0;
        }
    }

    &[data-popper-placement^='left'] > [data-popper-arrow] {
        border-right-width: 0;

        &::after {
            border-right-width: 0;
        }
    }
}

@mixin popup-arrow-size-variant($arrow-size: 6px) {
    > [data-popper-arrow] {
        &,
        &::after {
            border-width: $arrow-size;
        }
    }

    &[data-popper-placement^='top'],
    &[data-popper-placement^='bottom'] {
        > [data-popper-arrow] {
            &::after {
                margin-left: calc($arrow-size * -1);
            }
        }
    }

    &[data-popper-placement^='left'],
    &[data-popper-placement^='right'] {
        > [data-popper-arrow] {
            &::after {
                margin-top: calc($arrow-size * -1);
            }
        }
    }

    &[data-popper-placement^='top'] {
        > [data-popper-arrow] {
            bottom: calc($arrow-size * -1);

            &::after {
                bottom: 1px;
            }
        }
    }

    &[data-popper-placement^='bottom'] {
        > [data-popper-arrow] {
            top: calc($arrow-size * -1);

            &::after {
                top: 1px;
            }
        }
    }

    &[data-popper-placement^='left'] {
        > [data-popper-arrow] {
            right: calc($arrow-size * -1);

            &::after {
                right: 1px;
            }
        }
    }

    &[data-popper-placement^='right'] {
        > [data-popper-arrow] {
            left: calc($arrow-size * -1);

            &::after {
                left: 1px;
            }
        }
    }
}

@mixin popup-arrow-color-variant-for-side($side, $background, $border-color) {
    &[data-popper-placement^='#{$side}'] > [data-popper-arrow] {
        border-#{$side}-color: $border-color;

        &::after {
            border-#{$side}-color: $background;
        }
    }
}

@mixin popup-arrow-color-variant(
    $arrow: (
        'background': #ffffff,
        'border-color': (
            'top': #bcbcbc,
            'right': #bcbcbc,
            'bottom': #bcbcbc,
            'left': #bcbcbc
        )
    )
) {
    $background: map.get($arrow, 'background');
    $border-color: map.get($arrow, 'border-color');

    @include popup-arrow-color-variant-for-side('top', $background, map.get($border-color, 'top'));
    @include popup-arrow-color-variant-for-side(
        'right',
        $background,
        map.get($border-color, 'right')
    );
    @include popup-arrow-color-variant-for-side(
        'bottom',
        $background,
        map.get($border-color, 'bottom')
    );
    @include popup-arrow-color-variant-for-side(
        'left',
        $background,
        map.get($border-color, 'left')
    );
}
